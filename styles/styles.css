@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Oswald";
  src: url("../fonts/Oswald-Bold.woff2") format("woff2"), url("../fonts/Oswald-Bold.woff") format("woff");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Oswald";
  src: url("../fonts/Oswald-Medium.woff2") format("woff2"), url("../fonts/Oswald-Medium.woff") format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat Alternates";
  src: url("../fonts/MontserratAlternates-Medium.woff2") format("woff2"), url("../fonts/MontserratAlternates-Medium.woff") format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat Alternates";
  src: url("../fonts/MontserratAlternates-Regular.woff2") format("woff2"), url("../fonts/MontserratAlternates-Regular.woff") format("woff");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-black: #191a23;
  --color-white: #ffffff;
  --color-accent: #a95eba;
  --color-accent-alt: #eb8ed7;
  --color-accent-trans40: #a05eba99;
  --font-family-base: "Montserrat Alternates", sans-serif;
  --container-width: 1216px;
  --container-padding-x: 30px;
  --button-height: 53px;
  --transition-duration: 0.8s;
  --transition-duration-fast: 0.3s;
  --scale: scale(1.15);
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  -webkit-clip-path: inset(100%) !important;
          clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 1000px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (min-width: 1001px) {
  .visible-mobile {
    display: none !important;
  }
}

body {
  font-family: var(--font-family-base);
  font-weight: 500;
  line-height: 1.28;
  color: var(--color-black);
  background-color: var(--color-white);
}

a, button, textarea, svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

.accent-header {
  margin-block: 20px;
  background-color: var(--color-accent);
  display: inline-block;
  padding-block: clamp(6px, -9px + 4.17vw, 11px);
  padding-inline: 20px;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--color-white);
  text-transform: uppercase;
  font-family: "Oswald", sans-serif;
  font-weight: 500;
}

.many-text {
  width: 100%;
  padding-block: 20px;
  line-height: 2;
  font-size: clamp(18px, 8px + 2.08vw, 24px);
}
.many-text--long-p-bottom {
  padding-bottom: 60px;
}

.hero {
  display: flex;
  justify-content: center;
  align-items: center;
  height: clamp(354px, 177px + 49.17vw, 413px);
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--color-accent-alt);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  background-image: -webkit-image-set(url("../images/hero/hero.avif") type("image/avif") 1x, url("../images/hero/hero.jpg") 1x);
  background-image: image-set(url("../images/hero/hero.avif") type("image/avif") 1x, url("../images/hero/hero.jpg") 1x);
}
@media (min-width: 481px) {
  .hero {
    height: clamp(495px, 91px + 52.59vw, 617px);
  }
}
@media (min-width: 1001px) {
  .hero {
    height: 1085px;
  }
}
.hero__title {
  color: var(--color-white);
  font-family: "Oswald", sans-serif;
  font-weight: 500;
  text-align: center;
  text-transform: uppercase;
  font-size: clamp(48px, 34px + 3.75vw, 72px);
}
@media (min-width: 1001px) {
  .hero__title {
    font-size: clamp(130px, 15px + 11.46vw, 170px);
  }
}
.hero__title--smaller-font {
  font-size: clamp(35px, 22px + 3.59vw, 58px);
}
@media (min-width: 1001px) {
  .hero__title--smaller-font {
    font-size: clamp(89px, 12px + 7.74vw, 116px);
  }
}

.swiper {
  width: 100%;
  aspect-ratio: 2048/1367;
  max-width: 1920px;
}
.swiper-container {
  position: relative;
  z-index: 0;
  width: 100%;
  height: 100%;
}
.swiper-container::part(button-prev) {
  left: 25%;
}
.swiper-container::part(button-next) {
  right: 25%;
  left: auto;
}
.swiper-container::part(pagination) {
  color: var(--color-white);
  font-family: "Oswald", sans-serif;
  font-weight: 500;
  font-size: 20px;
  bottom: 13%;
  transform: translateY(50%);
  gap: 12px;
  display: flex;
  justify-content: center;
  align-items: center;
  pointer-events: none;
}
@media (min-width: 481px) {
  .swiper-container::part(pagination) {
    font-size: clamp(32px, -7968px + 800vw, 40px);
  }
}
.swiper-container::part(button-prev), .swiper-container::part(button-next) {
  display: none;
  background-color: var(--color-accent-trans40);
  color: var(--color-white);
  height: 40px;
  width: 40px;
  border-radius: 40px;
  padding: 20px;
  transition-duration: var(--transition-duration-fast);
  position: absolute;
  bottom: 13%;
  transform: translateY(50%);
  z-index: 20;
  top: auto;
}
@media (hover: hover) {
  .swiper-container::part(button-prev):hover, .swiper-container::part(button-next):hover {
    background-color: var(--color-accent);
  }
}
@media (hover: none) {
  .swiper-container::part(button-prev):active, .swiper-container::part(button-next):active {
    background-color: var(--color-accent);
  }
}
@media (min-width: 1001px) {
  .swiper-container::part(button-prev), .swiper-container::part(button-next) {
    display: flex;
  }
}
.swiper-slide img {
  width: 100%;
  height: 100%;
  display: block;
  -o-object-fit: cover;
     object-fit: cover;
}

.card {
  display: flex;
  flex-direction: column;
}
.card__title {
  font-family: "Oswald", sans-serif;
  font-weight: 500;
  font-size: clamp(25px, 6px + 5.16vw, 58px);
}
.card--feeding img {
  width: 100%;
  height: auto;
}/*# sourceMappingURL=styles.css.map */